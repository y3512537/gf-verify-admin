// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. 
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// VerifyVersionDao is the data access object for table verify_version.
type VerifyVersionDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns VerifyVersionColumns // columns contains all the column names of Table for convenient usage.
}

// VerifyVersionColumns defines and stores column names for table verify_version.
type VerifyVersionColumns struct {
	Id             string //           
    SoftwareId     string // 软件Id    
    VersionNumber  string // 主版本号  
    IsPublish      string // 是否发布  
    AttId          string // 附件Id    
    Comment        string // 版本备注  
    CreatedAt      string // 创建时间  
    UpdatedAt      string // 修改时间  
    DeletedAt      string // 删除时间
}

//  verifyVersionColumns holds the columns for table verify_version.
var verifyVersionColumns = VerifyVersionColumns{
	Id:            "id",              
            SoftwareId:    "software_id",     
            VersionNumber: "version_number",  
            IsPublish:     "is_publish",      
            AttId:         "att_id",          
            Comment:       "comment",         
            CreatedAt:     "created_at",      
            UpdatedAt:     "updated_at",      
            DeletedAt:     "deleted_at",
}

// NewVerifyVersionDao creates and returns a new DAO object for table data access.
func NewVerifyVersionDao() *VerifyVersionDao {
	return &VerifyVersionDao{
		group:   "default",
		table:   "verify_version",
		columns: verifyVersionColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *VerifyVersionDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *VerifyVersionDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *VerifyVersionDao) Columns() VerifyVersionColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *VerifyVersionDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *VerifyVersionDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *VerifyVersionDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}