// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. 
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// VerifyDeviceDao is the data access object for table verify_device.
type VerifyDeviceDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns VerifyDeviceColumns // columns contains all the column names of Table for convenient usage.
}

// VerifyDeviceColumns defines and stores column names for table verify_device.
type VerifyDeviceColumns struct {
	Id             string // 设备ID        
    CardId         string // 卡密          
    DeviceCode     string // 设备编号      
    DeviceName     string // 设备名称      
    DeviceStatus   string // 设备状态      
    LastLoginTime  string // 最后登录时间  
    LoginIp        string // 当前登录IP    
    CreatedAt      string // 创建时间      
    UpdatedAt      string // 修改时间      
    DeletedAt      string // 删除时间
}

//  verifyDeviceColumns holds the columns for table verify_device.
var verifyDeviceColumns = VerifyDeviceColumns{
	Id:            "id",               
            CardId:        "card_id",          
            DeviceCode:    "device_code",      
            DeviceName:    "device_name",      
            DeviceStatus:  "device_status",    
            LastLoginTime: "last_login_time",  
            LoginIp:       "login_ip",         
            CreatedAt:     "created_at",       
            UpdatedAt:     "updated_at",       
            DeletedAt:     "deleted_at",
}

// NewVerifyDeviceDao creates and returns a new DAO object for table data access.
func NewVerifyDeviceDao() *VerifyDeviceDao {
	return &VerifyDeviceDao{
		group:   "default",
		table:   "verify_device",
		columns: verifyDeviceColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *VerifyDeviceDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *VerifyDeviceDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *VerifyDeviceDao) Columns() VerifyDeviceColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *VerifyDeviceDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *VerifyDeviceDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *VerifyDeviceDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}